#! /usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import absolute_import, division, print_function, unicode_literals


import os.path, re, sys, time
from optparse import OptionParser

if sys.version_info[0] == 3:
    from urllib.request import Request, urlopen
else:
    from urllib2 import Request, urlopen

from feed_detector.coordinator import BaseCoordinator
from feed_detector.document    import Document
from feed_detector.filter      import BodyRemovalFilter
from feed_detector.formatter   import PrintFormatter


URL_RE = re.compile(r'\Ahttps?://', re.I)


class PrintCoordinator(BaseCoordinator):

  def __init__(self, config={}):
    config = dict(config, filters=[BodyRemovalFilter], formatter=PrintFormatter)
    super(PrintCoordinator, self).__init__(config)


def main():
    parser = OptionParser(usage="%prog: [options] <file or url>")
    parser.add_option('-u', '--url',  default=None, help="A document url")
    options, args = parser.parse_args()

    if len(args) != 1:
        parser.print_help()
        sys.exit(1)

    file = None
    url  = None
    if URL_RE.match(args[0]):
        headers = {'User-Agent': 'Mozilla/5.0'}
        request = Request(args[0], None, headers)
        file    = urlopen(request)
        url     = options.url or args[0]
    else:
        file = open(args[0], 'rt')
        url  = options.url or 'file://%s' % os.path.abspath(args[0])
    try:
        doc = Document(file.read(), url=url)
    finally:
        file.close()
        file = None

    t = time.time()
    PrintCoordinator({ 'filters':[BodyRemovalFilter], 'formatter':PrintFormatter }).run(doc)
    print("\n%f secs." % (time.time() - t))


if __name__ == '__main__':
    main()
